
<style>
  .combowise-box {
    width: 100%;
    transition: 0.5ms;
    padding: 5px;
  }
  .combowise-row {
    margin-bottom: 15px;
  }
  .combowise-thumbnail {
    display: flex;
  }
  .combowise-thumbnail-img {
    width: 35%;
    border-radius: 15px;
    overflow: hidden;
    position: relative;
    max-height: 180px;
  }
  .combowise-thumbnail-img img {
  	max-height: 100%;
    width: 100%;
  }
  .combowise-variants {
    display: flex;
    width: 65%;
    padding-left: 5px;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: flex-start;
  }
  
  .combowise-variants-item {
    padding: 10px 5px;
  }
  .combowise-variants-item span {
    padding: 5px 10px;
    border: 2px solid #ddd;
    border-radius: 25px;
    cursor: pointer;
    white-space: nowrap;
  }
  
  .combowise-variants-item span:hover {
    background-color: rgb(227 227 227 / 50%);
    box-shadow: 1px 1px 6px #eee;
    border: 2px solid #fff;
  }
  
  .combowise-selected {
    border: 2px solid black !important;
  }
  
  .combowise-heading {
  	margin-bottom: 10px !important;
    font-weight: 600;
    font-size: 18px;
  }
  
  .combowise-product-title {
  	margin-bottom: 5px !important;
    font-weight: 600;
  }
  
  .combowise-error {
  	color: red;
  }
  
  .combowise-hide {
  	display: none;
  }
  
  .combowise-soldout {
  	opacity: 0.6;
    cursor: not-allowed !important;
  }
  
  .combowise-overlaped-img {
  	position: absolute;
    top: 0;
    left: 0;
  }
  
  .combowise-overlaped-img img {
  	max-width: 50%;
    height: auto;
    cursor: pointer;
  }
  
  @media only screen and (max-width: 500px) {
    .combowise-box {
    	text-align: center;
    }
    .combowise-thumbnail {
      flex-direction: column;
    }
    .combowise-thumbnail-img {
      max-width: 100%;
      max-height: initial;
      align-self: center;
    }
    
    .combowise-variants {
    	width: 100%;
    }
    .combowise-variants {
      padding-left: 0px;
      justify-content: center;
    }
  }

  /* Custom by thomy */
  .cpapp-combo-vs{
    border:none;
  }
  .combowise-box-body{
    padding:0;
  }
  .combowise-box-body .cpapp-combo-vs-row{
    display:none;
  }
  .combowise-box-body .grouppacks{
    position:relative;
    padding: 10px 0;
    border-bottom: 1px solid #ddd;
  }
  .combowise-box-body .grouppacks label{
    font-weight:900;
  }
  .combowise-box-body .grouppacks .selecteditem {
    padding: 10px;
    border-radius: 2px;
    border: solid 1px #ccc;
    position: relative;
    cursor: pointer;
    width: 100%;
    display: flex;
    position:relative;
  }
  .combowise-box-body .grouppacks .selecteditem:after{
    content:"";
    position:absolute;
    transform: translateY(-50%) rotate(0deg);
    right:10px;
    top:50%;
    width: 0; 
    height: 0; 
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 6px solid #424245;
    transition:all 300ms linear;
  }
  .combowise-box-body .grouppacks.visible .selecteditem:after{
    transform: translateY(-50%) rotate(180deg);
  }
  .combowise-box-body .grouppacks .listOptions{
    border: solid 1px #ccc;
    border-top: none;
    list-style: none;
    box-shadow: 0px 1px 5px #ddd;
    position: absolute;
    z-index: 2000;
    margin: 0;
    padding: 0;
    background: #fff;
    overflow: auto;
    width: 100%;
    max-height:0;
    display: none;
  }
  .combowise-box-body .grouppacks.visible .listOptions{
    display: block;
    max-height: 360px;
  }
  .combowise-box-body .grouppacks .listOptions li{
    list-style:none;
    padding: 10px;
    border-bottom: solid 1px #ddd;
    overflow: hidden;
    text-decoration: none;
    color: #333;
    cursor: pointer;
    transition:all 0.25s ease-in-out;
  }
  .combowise-box-body .grouppacks .listOptions li:hover,.combowise-box-body .grouppacks .listOptions li.active{
	background-color:#f6f6f6;
  }
  .combowise-box-body .grouppacks .listOptions li img, .combowise-box-body .grouppacks .selecteditem img{
    width:42px;
    border-radius: 3px;
    margin-right: 5px;
    float:left;
  }
  .combowise-box-body .grouppacks .listOptions li small, .combowise-box-body .grouppacks .selecteditem small{
    display:block;
  }
</style>

<div class="combowise-box">
  <div class="combowise-box-body">
    <div class="combowise-col">
      {% for meta in cp_metas %}
      {% assign index1 = forloop.index %}

      {% assign pHandlev = meta | last | split: ":" %}

      {% assign p = all_products[pHandlev[0]] %}
      <div class="combowise-row">
        <p class="combowise-product-title">{{ p.title }}</p>
        <div class="combowise-thumbnail">
          <div class="combowise-thumbnail-img">
          	<img alt="{{ p.title }}" src="{{ p.featured_image | img_url: '200x' }}">
            <div class="combowise-overlaped-img"></div>
          </div>
          <div class="combowise-variants">
            {% if p.has_only_default_variant %}
              {% assign v = p.variants[0] %}

              <div class="combowise-variants-item">
                <span 
                      id="combowise_{{ index1 }}_1" 
                      data-image="" 
                      onclick="{% if p.available == true %}combowiseSelectionChanged({{ index1 }}, 1, {{ p.id }}, {{ v.id }}, `{{ title|strip }}`, `{{ v.sku }}`){% endif %}" 
                      class="{% if p.available == false %}combowise-soldout{% endif %}"
                      >{{ p.title | escape }}{% if p.available == false %} (Sold out){% endif %}</span>
              </div>
            {% else %}
              {% for v in p.variants %}

                {% capture title %}
                {{ p.title | escape }} {{ v.title | escape| replace: 'Default Title', '' }}
                {% endcapture %}

                {% assign index2 = forloop.index %}
                <div class="combowise-variants-item">
                  <span 
                        id="combowise_{{ index1 }}_{{ index2 }}" 
                        data-image="{{ v.image.src | img_url: '80x' }}" 
                        onclick="{% if v.available == true %}combowiseSelectionChanged({{ index1 }}, {{ index2 }}, {{ p.id }}, {{ v.id }}, `{{ title|strip }}`, `{{ v.sku }}`){% endif %}" 
                        class="{% if v.available == false %}combowise-soldout{% endif %}"
                        >{{ v.title }}{% if v.available == false %} (Sold out){% endif %}</span>
                </div>
              {% endfor %}
            {% endif %}
          </div>
        </div>
      </div>
      {% endfor %}
    </div>

    {%- capture pack_labels -%}
      {%- for meta in cp_metas -%}
        {%- assign handle = meta|last -%}
        {%- assign p = all_products[handle] -%}
          {%- for tag in p.tags -%}
            {%- if tag contains 'pack__' -%}
            	{{tag}}||
            {%- endif -%}
          {%- endfor -%}
      {%- endfor -%}
    {%- endcapture -%}
    
    {% assign pack_labelsuniq = pack_labels | split: "||" %}

    {% assign groupspack = pack_labelsuniq | uniq | join: "||"%}
    {% assign arraygroupspack = groupspack | split: "||"%}
    
    {%- for group in arraygroupspack -%}
      {% assign selecteditem = false %}
    
      <div class="grouppacks">
        <label>{{group| remove: "pack__"}}</label>
        <div>Elige color y talla</div>
        <a class="selecteditem">
          {%- for meta in cp_metas -%}
              {% assign groupprint = false %}
              {% assign handle = meta|last %}
              {% assign p = all_products[handle] %}

              {%- for tag in p.tags -%}
                {%- if tag contains group -%}
                  {%- assign groupprint = true -%}
                {%- endif -%}
              {%- endfor -%}

              {%- if groupprint -%}
                {% if p.has_only_default_variant and p.available == true %}
    	      	{% assign selecteditem = true %}
                  <div 
                      data-value="{{ p.id }}-{{ p.variants[0].id }}" 
                      data-title="{{ p.title }}" 
                      data-sku="{{ p.variants[0].sku }}" 
                      {% if p.available == false %}disabled{% endif %}
                      >{{ p.title }}{% if p.available == false %} - Sold out{% endif %}
                   </div>
			          {% break %}
                  {% else %}
                    {% for v in p.variants %}
          			  {% if v.available %}
                        {% assign selecteditem = true %}
                        {% capture title %}
                          {{ p.title | escape }} {{ v.title | escape| replace: 'Default Title', '' }}
                        {% endcapture %}
                        <div 
                            data-value="{{p.id}}-{{ v.id }}" 
                            data-title="{{ title|strip }}" 
                            data-sku="{{ v.sku }}" 
                            {% if v.available == false %}disabled{% endif %}
                            >
                          <img src="{{v.image | img_url:"150x150", crop: 'center' }}"/>
                          <label>{{ p.title }} - {{ v.title }}</label>
                          <small>{{p.price | money}}</small>
                      	</div>
          				{% break %}
          			  {% endif %}
			          
                    {% endfor %}
                  {% endif %}
              {%- endif -%}
          	
          	  {% if selecteditem %}
          	  	{% break %}
          	  {% endif %}
          
            {%- endfor -%}
        </a>
        <ul class="listOptions">
          {%- for meta in cp_metas -%}
            {% assign groupprint = false %}
            {% assign handle = meta|last %}

          	{% assign index1 = forloop.index %}
          
		    {% assign p = all_products[handle] %}
          	
            {%- for tag in p.tags -%}
              {%- if tag contains group -%}
          		{%- assign groupprint = true -%}
          	  {%- endif -%}
            {%- endfor -%}
          	
          	{%- if groupprint -%}
          
              {% if p.has_only_default_variant %}
                <li data-select="{{p.id}}"
                    data-value="{{ p.id }}-{{ p.variants[0].id }}" 
                    data-title="{{ p.title }}" 
                    data-sku="{{ p.variants[0].sku }}"
                    onclick="{% if p.available == true %}combowiseSelectionChanged({{ index1 }}, 1, {{ p.id }}, {{ v.id }}, `{{ title|strip }}`, `{{ v.sku }}`){% endif %}"
                    {% if p.available == false %}disabled{% endif %}
                    >{{ p.title }}{% if p.available == false %} - Sold out{% endif %}
                 </li>
                {% else %}
                  {% for v in p.variants %}
          			{% assign index2 = forloop.index %}
                    {% capture title %}
                      {{ p.title | escape }} {{ v.title | escape| replace: 'Default Title', '' }}
                    {% endcapture %}
                    <li data-select="{{p.id}}"
                        data-value="{{p.id}}-{{ v.id }}" 
                        data-title="{{ title|strip }}" 
                        data-sku="{{ v.sku }}" 
                        {% if v.available == false %}disabled{% endif %}
                        onclick="{% if v.available == true %}combowiseSelectionChanged({{ index1 }}, {{ index2 }}, {{ p.id }}, {{ v.id }}, `{{ title|strip }}`, `{{ v.sku }}`){% endif %}" 
                        >
                      <img src="{{v.image | img_url:"150x150", crop: 'center' }}"/>
                      <label>{{ p.title }} - {{ v.title }}{% if v.available == false %} - Sold out{% endif %}</label>
                      <small>{{p.price | money}}</small>
                    </li>
                  {% endfor %}
                {% endif %}
          	{%- endif -%}
          
          {%- endfor -%}
        </ul>
      </div>
    {%- endfor -%}
    
    
  </div>
  
  <div class="combowise-box-header">
  	<p class="combowise-heading combowise-hide">Please select any %count% products</p>
  </div>
</div>
<script>  
  const combowiseConfig = JSON.parse('{{ config }}');

  let combowiseSelectedItems = [];
  function combowiseSelectionChanged(index1, index2, productId, variantId, title, sku) {
    for(let i = 0; i < combowiseSelectedItems.length; i++) {
      if (combowiseSelectedItems[i].index1 == index1 && combowiseSelectedItems[i].index2 != index2) {
      	return;
      }
    }
    
    const id = `${productId}-${variantId}`;
    
    const ele = document.getElementById(`combowise_${index1}_${index2}`);
   
    if (ele.classList.contains('combowise-selected')) {
      combowiseSelectedItems = combowiseSelectedItems.filter(e => (e.index1 == index1 && e.index2 == index2) ? false : true );
      ele.classList.remove('combowise-selected');
      const thumbnailDivImgEle = ele.parentNode.parentNode.parentNode.querySelector('.combowise-overlaped-img').querySelector(`#combowise_img_${index1}_${index2}`);
      if (thumbnailDivImgEle) {
        thumbnailDivImgEle.parentNode.removeChild(thumbnailDivImgEle);
      }
    } else {
      const image = ele.getAttribute('data-image');
      
      if (image && image.indexOf('no-image') === -1) {
      	const thumbnailDivEle = ele.parentNode.parentNode.parentNode.querySelector('.combowise-overlaped-img');
        
        const x = document.createElement("img");
        x.setAttribute("src", image);
        x.setAttribute("alt", title);
        x.setAttribute("id", `combowise_img_${index1}_${index2}`);
        x.addEventListener('click', function() {
          window.open(image, '_blank');
        });
        
        thumbnailDivEle.appendChild(x);
      }
      
      ele.classList.add('combowise-selected');
      combowiseSelectedItems.push({
      	index1,
        index2,
        title,
        sku,
        id
      });
    }
    
    if(combowiseSelectedItems.length == combowiseConfig.boxLock) {
      combowiseToggleBtns(false);
    } else {
      combowiseToggleBtns(true);
    }
    
    updateCombowiseInput();
  }
  
  function combowiseToggleBtns(bool) {
    const combowiseAllBtns = document.querySelectorAll('button');
    for (let i = 0; i < combowiseAllBtns.length; i++) {
      combowiseAllBtns[i].disabled = bool;
    }
    
    if (bool) {
      const errorEle = document.querySelector('.combowise-heading');
      errorEle.classList.add('combowise-error');
      errorEle.focus();
      
    } else {
      document.querySelector('.combowise-heading').classList.remove('combowise-error');
    }
  }
  
  function updateCombowiseInput() {
    
    const existingEleold = document.querySelectorAll('.combowise-box-input');
    console.log(existingEleold);
    
    for (let i = 0; i < existingEleold.length; i++) {
      existingEleold[i].parentNode.removeChild(existingEleold[i]);
    }
    
    const existingEleRemoved = document.querySelectorAll('.combowise-box-input');
    console.log(existingEleRemoved);
    
    // adding childs
    
    for (let i = 0; i < combowiseSelectedItems.length; i++) {
      
      let value = `Title: ${combowiseSelectedItems[i].title}`;
      if (combowiseSelectedItems[i].sku) {
        value += `, SKU: ${combowiseSelectedItems[i].sku}`;
      }

      value += `, id: ${combowiseSelectedItems[i].id}`;

      const x = document.createElement("input");
      x.setAttribute("type", "hidden");
      x.setAttribute("name", `properties[Box item ${i + 1}]`);
      x.setAttribute("value", value);
      x.setAttribute("class", "combowise-box-input");
      
      
      document.querySelector('.combowise-box').append(x);
    }
    
    const existingEleNew = document.querySelectorAll('.combowise-box-input');
    console.log(existingEleNew);
  }
  
 (function() {

    const state = document.readyState;

    if (state === "interactive" || state === "complete") {

      console.info('Combowise: dom is ready');
      
      if(combowiseSelectedItems.length != combowiseConfig.boxLock) {
      	combowiseToggleBtns(true);
      }
      
      let headingEle = document.querySelector('.combowise-heading');
      headingEle.innerHTML = headingEle.innerHTML.replace('%count%', combowiseConfig.boxLock);
      headingEle.classList.remove('combowise-hide');

      const paymentBtnEle = document.querySelector('.shopify-payment-button');

      if (paymentBtnEle) {
        paymentBtnEle.style.display = "none";
      }
      
      
      //Thomy Custom
      const selecteditems = document.querySelectorAll('.selecteditem');
      const ulcont = document.querySelectorAll('.grouppacks');
      
      selecteditems.forEach((item)=>{
		  item.addEventListener("click", ()=>{
          console.log(item.parentNode);
          if(item.parentNode.classList.contains("visible")){
          	//item.nextElementSibling.classList.remove("visible");
            ulcont.forEach((ulitem)=>{
              ulitem.classList.remove("visible");
            });
          }else{
            ulcont.forEach((ulitem)=>{
              ulitem.classList.remove("visible");
            });
            item.parentNode.classList.add("visible");
          }
        }, false);
      });

   	  const listOptions = document.querySelectorAll('.listOptions li');
   	  listOptions.forEach((item)=>{
		item.addEventListener("click", ()=>{
          let refSelect = item.dataset.select;
          let refSelectOpt = item.dataset.value;
          console.log(item);
          console.log(refSelect);

          if(item.classList.contains("active")){
        	//no hago nada
          }else{
            let siblings = Array.prototype.filter.call(item.parentNode.children, function(child){
              return child !== item;
            });
            siblings.forEach((sibling)=>{
              sibling.classList.remove("active");
            });

            item.classList.add("active");
            //Close group list
            item.closest(".grouppacks").classList.remove("visible");
            
            /*
            let getselectbyid = document.querySelector('#slc'+refSelect);
            //Set option value
            getselectbyid.value = refSelectOpt;
            
            let event = document.createEvent('HTMLEvents');
            event.initEvent('change', true, false);
            getselectbyid.dispatchEvent(event);
            //combowiseVariantChange(getselectbyid);
            */
          }
          
          
        }, false);
      });

      

    } else setTimeout(arguments.callee, 100)

 })();
</script>
